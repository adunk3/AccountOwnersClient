{"ast":null,"code":"import _objectSpread from \"/Users/alexduncan/accountownerclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/alexduncan/accountownerclient/src/containers/Owner/OwnerDetails/OwnerDetails.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Well, Row, Col } from 'react-bootstrap';\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\nimport Moment from 'react-moment';\nimport OwnersAccounts from '../../../components/OwnerComponents/OwnersAccounts/OwnersAccounts';\n\nconst OwnerDetails = props => {\n  const owner = useSelector(state => state.repository.data);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let id = props.match.params.id;\n    let url = '/api/owner/' + id + '/account';\n    dispatch(repositoryActions.getData(url, _objectSpread({}, props)));\n  }, [dispatch, props]);\n\n  const renderTypeOfUserConditionally = owner => {\n    let typeOfUser = null;\n\n    if (owner.accounts && owner.accounts.length <= 2) {\n      typeOfUser = React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Type of user:\")), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: 'text-success',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Beginner user.\")));\n    } else {\n      typeOfUser = React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Type of user:\")), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: 'text-info',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Advanced user.\")));\n    }\n\n    return typeOfUser;\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Well, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Owner name:\")), React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, owner.name)), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Date of birth:\")), React.createElement(Col, {\n    md: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Moment, {\n    format: \"DD/MM/YYYY\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, owner.dateOfBirth))), renderTypeOfUserConditionally(owner)), React.createElement(OwnersAccounts, {\n    accounts: owner.accounts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }));\n};\n\nexport default OwnerDetails;","map":{"version":3,"sources":["/Users/alexduncan/accountownerclient/src/containers/Owner/OwnerDetails/OwnerDetails.js"],"names":["React","Fragment","useEffect","useSelector","useDispatch","Well","Row","Col","repositoryActions","Moment","OwnersAccounts","OwnerDetails","props","owner","state","repository","data","dispatch","id","match","params","url","getData","renderTypeOfUserConditionally","typeOfUser","accounts","length","name","dateOfBirth"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Well, Row, Col } from 'react-bootstrap';\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\nimport Moment from 'react-moment';\nimport OwnersAccounts from '../../../components/OwnerComponents/OwnersAccounts/OwnersAccounts';\n\nconst OwnerDetails = (props) => {\n\n    const owner = useSelector(state=> state.repository.data);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        let id = props.match.params.id;\n        let url = '/api/owner/' + id + '/account';\n        dispatch(repositoryActions.getData(url, {...props}));\n    },[dispatch,props]);\n\n    const renderTypeOfUserConditionally = (owner) => {\n        let typeOfUser = null;\n    \n        if (owner.accounts && owner.accounts.length <= 2) {\n            typeOfUser = (\n                <Row>\n                    <Col md={3}>\n                        <strong>Type of user:</strong>\n                    </Col>\n                    <Col md={3}>\n                        <span className={'text-success'}>Beginner user.</span>\n                    </Col>\n                </Row>\n            );\n        }\n        else {\n            typeOfUser = (\n                <Row>\n                    <Col md={3}>\n                        <strong>Type of user:</strong>\n                    </Col>\n                    <Col md={3}>\n                        <span className={'text-info'}>Advanced user.</span>\n                    </Col>\n                </Row>\n            );\n        }\n    \n        return typeOfUser;\n    }\n    \n    return (\n        <Fragment>\n            <Well>\n                <Row>\n                    <Col md={3}>\n                        <strong>Owner name:</strong>\n                    </Col>\n                    <Col md={3}>\n                        {owner.name}\n                    </Col>\n                </Row>\n                <Row>\n                    <Col md={3}>\n                        <strong>Date of birth:</strong>\n                    </Col>\n                    <Col md={3}>\n                        <Moment format=\"DD/MM/YYYY\">{owner.dateOfBirth}</Moment>\n                    </Col>\n                </Row>\n                {renderTypeOfUserConditionally(owner)}\n            </Well>\n            <OwnersAccounts accounts={owner.accounts} />\n        </Fragment>\n    )\n}\n\nexport default OwnerDetails;"]},"metadata":{},"sourceType":"module"}