{"ast":null,"code":"import _objectSpread from \"/Users/alexduncan/accountownerclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/alexduncan/accountownerclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexduncan/accountownerclient/src/containers/Owner/CreateOwner/CreateOwner.js\";\nimport React, { useState, useEffect } from 'react';\nimport Input from '../../../UI/Inputs/Input';\nimport { Form, Well, Button, FormGroup, Col } from 'react-bootstrap';\nimport { returnInputConfiguration } from '../../../Utility/InputConfiguration';\nimport * as formUtilityActions from '../../../Utility/formUtilityActions';\n\nconst CreateOwner = () => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        ownerForm = _useState2[0],\n        setOwnerForm = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isFormValid = _useState4[0],\n        setIsFormValid = _useState4[1];\n\n  useEffect(() => {\n    setOwnerForm(returnInputConfiguration());\n  });\n  const formElementsArray = formUtilityActions.convertStateToArrayOfFormObjects(_objectSpread({}, ownerForm));\n\n  const createOwner = () => {};\n\n  const handleChangeEvent = () => {};\n\n  const redirectToOwnerList = () => {};\n\n  return React.createElement(Well, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Form, {\n    horizontal: true,\n    onSubmit: createOwner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, formElementsArray.map(element => {\n    return React.createElement(Input, {\n      key: element.id,\n      elementType: element.config.element,\n      id: element.id,\n      label: element.config.label,\n      type: element.config.type,\n      value: element.config.value,\n      changed: event => handleChangeEvent(event, element.id),\n      errorMessage: element.config.errorMessage,\n      invalid: !element.config.valid,\n      shouldValidate: element.config.validation,\n      touched: element.config.touched,\n      blur: event => handleChangeEvent(event, element.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    });\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })));\n};\n\nexport default CreateOwner;","map":{"version":3,"sources":["/Users/alexduncan/accountownerclient/src/containers/Owner/CreateOwner/CreateOwner.js"],"names":["React","useState","useEffect","Input","Form","Well","Button","FormGroup","Col","returnInputConfiguration","formUtilityActions","CreateOwner","ownerForm","setOwnerForm","isFormValid","setIsFormValid","formElementsArray","convertStateToArrayOfFormObjects","createOwner","handleChangeEvent","redirectToOwnerList","map","element","id","config","label","type","value","event","errorMessage","valid","validation","touched"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,SAA7B,EAAwCC,GAAxC,QAAmD,iBAAnD;AACA,SAASC,wBAAT,QAAyC,qCAAzC;AACA,OAAO,KAAKC,kBAAZ,MAAoC,qCAApC;;AAIA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBAEYV,QAAQ,CAAC,EAAD,CAFpB;AAAA;AAAA,QAEfW,SAFe;AAAA,QAEJC,YAFI;;AAAA,qBAGgBZ,QAAQ,CAAC,KAAD,CAHxB;AAAA;AAAA,QAGfa,WAHe;AAAA,QAGFC,cAHE;;AAKtBb,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,YAAY,CAACJ,wBAAwB,EAAzB,CAAZ;AACH,GAFQ,CAAT;AAIA,QAAMO,iBAAiB,GAAGN,kBAAkB,CAACO,gCAAnB,mBAAyDL,SAAzD,EAA1B;;AAEA,QAAMM,WAAW,GAAG,MAAM,CAEzB,CAFD;;AAIA,QAAMC,iBAAiB,GAAG,MAAM,CAE/B,CAFD;;AAIA,QAAMC,mBAAmB,GAAG,MAAM,CAEjC,CAFD;;AAKA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,UAAU,MAAhB;AAAiB,IAAA,QAAQ,EAAEF,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQF,iBAAiB,CAACK,GAAlB,CAAsBC,OAAO,IAAI;AAC7B,WAAO,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,OAAO,CAACC,EAApB;AAAwB,MAAA,WAAW,EAAED,OAAO,CAACE,MAAR,CAAeF,OAApD;AACH,MAAA,EAAE,EAAEA,OAAO,CAACC,EADT;AACa,MAAA,KAAK,EAAED,OAAO,CAACE,MAAR,CAAeC,KADnC;AAEH,MAAA,IAAI,EAAEH,OAAO,CAACE,MAAR,CAAeE,IAFlB;AAEwB,MAAA,KAAK,EAAEJ,OAAO,CAACE,MAAR,CAAeG,KAF9C;AAGH,MAAA,OAAO,EAAGC,KAAD,IAAWT,iBAAiB,CAACS,KAAD,EAAQN,OAAO,CAACC,EAAhB,CAHlC;AAIH,MAAA,YAAY,EAAED,OAAO,CAACE,MAAR,CAAeK,YAJ1B;AAKH,MAAA,OAAO,EAAE,CAACP,OAAO,CAACE,MAAR,CAAeM,KALtB;AAK6B,MAAA,cAAc,EAAER,OAAO,CAACE,MAAR,CAAeO,UAL5D;AAMH,MAAA,OAAO,EAAET,OAAO,CAACE,MAAR,CAAeQ,OANrB;AAOH,MAAA,IAAI,EAAGJ,KAAD,IAAWT,iBAAiB,CAACS,KAAD,EAAQN,OAAO,CAACC,EAAhB,CAP/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAQH,GATD,CAFR,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ,CADJ,CADJ;AAmBH,CA3CD;;AA4CA,eAAeZ,WAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Input from '../../../UI/Inputs/Input';\nimport { Form, Well, Button, FormGroup, Col } from 'react-bootstrap';\nimport { returnInputConfiguration } from '../../../Utility/InputConfiguration';\nimport * as formUtilityActions from '../../../Utility/formUtilityActions';\n\n\n\nconst CreateOwner = () => {\n\n    const [ownerForm, setOwnerForm] = useState({});\n    const [isFormValid, setIsFormValid] = useState(false);\n\n    useEffect(() => {\n        setOwnerForm(returnInputConfiguration());\n    })\n\n    const formElementsArray = formUtilityActions.convertStateToArrayOfFormObjects({ ...ownerForm });\n\n    const createOwner = () => {\n\n    }\n\n    const handleChangeEvent = () => {\n\n    }\n\n    const redirectToOwnerList = () => {\n\n    }\n\n\n    return (\n        <Well>\n            <Form horizontal onSubmit={createOwner}>\n                {\n                    formElementsArray.map(element => {\n                        return <Input key={element.id} elementType={element.config.element}\n                            id={element.id} label={element.config.label}\n                            type={element.config.type} value={element.config.value}\n                            changed={(event) => handleChangeEvent(event, element.id)}\n                            errorMessage={element.config.errorMessage}\n                            invalid={!element.config.valid} shouldValidate={element.config.validation}\n                            touched={element.config.touched}\n                            blur={(event) => handleChangeEvent(event, element.id)} />\n                    })\n                }\n                <br />\n            </Form>\n        </Well>\n    )\n}\nexport default CreateOwner;"]},"metadata":{},"sourceType":"module"}