{"ast":null,"code":"import * as actionTypes from './actionTypes';\n\nconst execute404Handler = props => {\n  return {\n    type: actionTypes.HTTP_404_ERROR,\n    props: props\n  };\n};\n\nconst execute500Handler = props => {\n  return {\n    type: actionTypes.HTTP_500_ERROR,\n    props: props\n  };\n};\n\nconst executeOtherErrorHandler = error => {\n  return {\n    type: actionTypes.HTTP_OTHER_ERROR,\n    error: error\n  };\n};\n\nexport const handleHTTPError = (error, props) => {\n  if (error.response.status === 404) {\n    return execute404Handler(props);\n  } else if (error.response.status === 500) {\n    return execute500Handler(props);\n  } else {\n    return executeOtherErrorHandler(error);\n  }\n};\nexport const closeErrorModal = () => {\n  return {\n    type: actionTypes.CLOSE_ERROR_MODAL\n  };\n};","map":{"version":3,"sources":["/Users/alexduncan/accountownerclient/src/store/actions/errorHandlerActions.js"],"names":["actionTypes","execute404Handler","props","type","HTTP_404_ERROR","execute500Handler","HTTP_500_ERROR","executeOtherErrorHandler","error","HTTP_OTHER_ERROR","handleHTTPError","response","status","closeErrorModal","CLOSE_ERROR_MODAL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA4B,eAA5B;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACI,cADf;AAEHF,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALD;;AAMA,MAAMG,iBAAiB,GAAIH,KAAD,IAAW;AACjC,SAAO;AACHC,IAAAA,IAAI,EAAEH,WAAW,CAACM,cADf;AAEHJ,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALD;;AAMA,MAAMK,wBAAwB,GAAIC,KAAD,IAAW;AACxC,SAAO;AACHL,IAAAA,IAAI,EAAEH,WAAW,CAACS,gBADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALD;;AAMA,OAAO,MAAME,eAAe,GAAG,CAACF,KAAD,EAAQN,KAAR,KAAkB;AAC7C,MAAIM,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;AAC/B,WAAOX,iBAAiB,CAACC,KAAD,CAAxB;AACH,GAFD,MAGK,IAAIM,KAAK,CAACG,QAAN,CAAeC,MAAf,KAA0B,GAA9B,EAAmC;AACpC,WAAOP,iBAAiB,CAACH,KAAD,CAAxB;AACH,GAFI,MAGA;AACD,WAAOK,wBAAwB,CAACC,KAAD,CAA/B;AACH;AACJ,CAVM;AAYP,OAAO,MAAMK,eAAe,GAAG,MAAM;AACjC,SAAO;AACHV,IAAAA,IAAI,EAAEH,WAAW,CAACc;AADf,GAAP;AAGH,CAJM","sourcesContent":["import * as actionTypes from'./actionTypes';\n\nconst execute404Handler = (props) => {\n    return {\n        type: actionTypes.HTTP_404_ERROR,\n        props: props\n    }\n}\nconst execute500Handler = (props) => {\n    return {\n        type: actionTypes.HTTP_500_ERROR,\n        props: props\n    }\n}\nconst executeOtherErrorHandler = (error) => {\n    return {\n        type: actionTypes.HTTP_OTHER_ERROR,\n        error: error\n    }\n}\nexport const handleHTTPError = (error, props) => {\n    if (error.response.status === 404) {\n        return execute404Handler(props);\n    }\n    else if (error.response.status === 500) {\n        return execute500Handler(props);\n    }\n    else {\n        return executeOtherErrorHandler(error);\n    }\n}\n\nexport const closeErrorModal = () => {\n    return {\n        type: actionTypes.CLOSE_ERROR_MODAL,\n    }\n}"]},"metadata":{},"sourceType":"module"}