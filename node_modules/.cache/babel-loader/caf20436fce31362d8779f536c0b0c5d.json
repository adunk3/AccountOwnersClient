{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from '../../axios/axios';\nimport * as errorHandlerActions from './errorHandlerActions';\n\nconst getDataSuccess = data => {\n  return {\n    type: actionTypes.GET_DATA_SUCCESS,\n    data: data\n  };\n};\n\nexport const getData = (url, props) => {\n  return dispatch => {\n    axios.get(url).then(response => {\n      console.log(response);\n      dispatch(getDataSuccess(response.data));\n    }).catch(error => {\n      dispatch(errorHandlerActions.handleHTTPError(error, props));\n    });\n  };\n};\n\nconst postDataSuccess = response => {\n  return {\n    type: actionTypes.POST_DATA_SUCCESS,\n    response: response\n  };\n};\n\nexport const postData = (url, obj, props) => {\n  return dispatch => {\n    axios.post(url, obj).then(response => {\n      dispatch(postDataSuccess(response));\n    }).catch(error => {\n      dispatch(errorHandlerActions.handleHTTPError(error, props));\n    });\n  };\n};\n\nconst putDataSuccess = response => {\n  return {\n    type: actionTypes.PUT_DATA_SUCCESS,\n    response: response\n  };\n};\n\nexport const putData = (url, obj, props) => {\n  return dispatch => {\n    axios.put(url, obj).then(response => {\n      dispatch(putDataSuccess(response));\n    }).catch(error => {\n      dispatch(errorHandlerActions.handleHTTPError(error, props));\n    });\n  };\n};\n\nconst deleteDataSuccess = response => {\n  return {\n    type: actionTypes.DELETE_DATA_SUCCESS,\n    response: response\n  };\n};\n\nexport const deleteData = (url, props) => {\n  return dispatch => {\n    axios.delete(url).then(response => {\n      dispatch(deleteDataSuccess(response));\n    }).catch(error => {\n      dispatch(errorHandlerActions.handleHTTPError(error, props));\n    });\n  };\n};\nexport const closeSuccessModal = (props, url) => {\n  return {\n    type: actionTypes.CLOSE_SUCCESS_MODAL,\n    props: props,\n    url: url\n  };\n};","map":{"version":3,"sources":["/Users/alexduncan/accountownerclient/src/store/actions/repositoryActions.js"],"names":["actionTypes","axios","errorHandlerActions","getDataSuccess","data","type","GET_DATA_SUCCESS","getData","url","props","dispatch","get","then","response","console","log","catch","error","handleHTTPError","postDataSuccess","POST_DATA_SUCCESS","postData","obj","post","putDataSuccess","PUT_DATA_SUCCESS","putData","put","deleteDataSuccess","DELETE_DATA_SUCCESS","deleteData","delete","closeSuccessModal","CLOSE_SUCCESS_MODAL"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA4B,eAA5B;AACA,OAAOC,KAAP,MAAiB,mBAAjB;AACA,OAAO,KAAKC,mBAAZ,MAAqC,uBAArC;;AAGA,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAEL,WAAW,CAACM,gBADf;AAEHF,IAAAA,IAAI,EAAEA;AAFH,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMG,OAAO,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACnC,SAAOC,QAAD,IAAc;AAChBT,IAAAA,KAAK,CAACU,GAAN,CAAUH,GAAV,EACCI,IADD,CACMC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAH,MAAAA,QAAQ,CAACP,cAAc,CAACU,QAAQ,CAACT,IAAV,CAAf,CAAR;AACH,KAJD,EAKCY,KALD,CAKQC,KAAK,IAAI;AACbP,MAAAA,QAAQ,CAACR,mBAAmB,CAACgB,eAApB,CAAoCD,KAApC,EAA2CR,KAA3C,CAAD,CAAR;AACH,KAPD;AAQH,GATD;AAUH,CAXM;;AAaP,MAAMU,eAAe,GAAIN,QAAD,IAAc;AAClC,SAAO;AACHR,IAAAA,IAAI,EAAEL,WAAW,CAACoB,iBADf;AAEHP,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMQ,QAAQ,GAAG,CAACb,GAAD,EAAMc,GAAN,EAAWb,KAAX,KAAqB;AACzC,SAAQC,QAAD,IAAc;AACjBT,IAAAA,KAAK,CAACsB,IAAN,CAAWf,GAAX,EAAgBc,GAAhB,EACCV,IADD,CACMC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACS,eAAe,CAACN,QAAD,CAAhB,CAAR;AACH,KAHD,EAICG,KAJD,CAIQC,KAAK,IAAI;AACbP,MAAAA,QAAQ,CAACR,mBAAmB,CAACgB,eAApB,CAAoCD,KAApC,EAA2CR,KAA3C,CAAD,CAAR;AACH,KAND;AAOH,GARD;AASH,CAVM;;AAYP,MAAMe,cAAc,GAAIX,QAAD,IAAc;AACjC,SAAO;AACHR,IAAAA,IAAI,EAAEL,WAAW,CAACyB,gBADf;AAEHZ,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMa,OAAO,GAAG,CAAClB,GAAD,EAAMc,GAAN,EAAWb,KAAX,KAAqB;AACxC,SAAQC,QAAD,IAAc;AACjBT,IAAAA,KAAK,CAAC0B,GAAN,CAAUnB,GAAV,EAAec,GAAf,EACCV,IADD,CACMC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACc,cAAc,CAACX,QAAD,CAAf,CAAR;AACH,KAHD,EAICG,KAJD,CAIOC,KAAK,IAAI;AACZP,MAAAA,QAAQ,CAACR,mBAAmB,CAACgB,eAApB,CAAoCD,KAApC,EAA2CR,KAA3C,CAAD,CAAR;AACH,KAND;AAOH,GARD;AASH,CAVM;;AAYP,MAAMmB,iBAAiB,GAAIf,QAAD,IAAc;AACpC,SAAO;AACHR,IAAAA,IAAI,EAAEL,WAAW,CAAC6B,mBADf;AAEHhB,IAAAA,QAAQ,EAAEA;AAFP,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMiB,UAAU,GAAG,CAACtB,GAAD,EAAMC,KAAN,KAAgB;AACtC,SAAQC,QAAD,IAAc;AACjBT,IAAAA,KAAK,CAAC8B,MAAN,CAAavB,GAAb,EACCI,IADD,CACMC,QAAQ,IAAI;AACdH,MAAAA,QAAQ,CAACkB,iBAAiB,CAACf,QAAD,CAAlB,CAAR;AACH,KAHD,EAICG,KAJD,CAIOC,KAAK,IAAI;AACZP,MAAAA,QAAQ,CAACR,mBAAmB,CAACgB,eAApB,CAAoCD,KAApC,EAA2CR,KAA3C,CAAD,CAAR;AACH,KAND;AAOH,GARD;AASH,CAVM;AAYP,OAAO,MAAMuB,iBAAiB,GAAG,CAACvB,KAAD,EAAQD,GAAR,KAAgB;AAC7C,SAAO;AACHH,IAAAA,IAAI,EAAEL,WAAW,CAACiC,mBADf;AAEHxB,IAAAA,KAAK,EAAEA,KAFJ;AAGHD,IAAAA,GAAG,EAAEA;AAHF,GAAP;AAKH,CANM","sourcesContent":["import * as actionTypes from'./actionTypes';\nimport axios from'../../axios/axios';\nimport * as errorHandlerActions from './errorHandlerActions';\n\n\nconst getDataSuccess = (data) => {\n    return {\n        type: actionTypes.GET_DATA_SUCCESS,\n        data: data    \n    }\n}\n\nexport const getData = (url, props) => {\n    return(dispatch) => {\n        axios.get(url)\n        .then(response => {\n            console.log(response)\n            dispatch(getDataSuccess(response.data));\n        }) \n        .catch( error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));   \n        })    \n    }\n}\n\nconst postDataSuccess = (response) => {\n    return {\n        type: actionTypes.POST_DATA_SUCCESS,\n        response: response\n    }\n}\n\nexport const postData = (url, obj, props) => {\n    return (dispatch) => {\n        axios.post(url, obj)\n        .then(response => {\n            dispatch(postDataSuccess(response));\n        })\n        .catch( error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));   \n        })\n    }\n}\n\nconst putDataSuccess = (response) => {\n    return {\n        type: actionTypes.PUT_DATA_SUCCESS,\n        response: response\n    }\n}\n\nexport const putData = (url, obj, props) => {\n    return (dispatch) => {\n        axios.put(url, obj)\n        .then(response => {\n            dispatch(putDataSuccess(response));\n        })\n        .catch(error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));                       \n        })\n    }\n}\n\nconst deleteDataSuccess = (response) => {\n    return {\n        type: actionTypes.DELETE_DATA_SUCCESS,\n        response: response\n    }\n}\n\nexport const deleteData = (url, props) => {\n    return (dispatch) => {\n        axios.delete(url)\n        .then(response => {\n            dispatch(deleteDataSuccess(response));\n        })\n        .catch(error => {\n            dispatch(errorHandlerActions.handleHTTPError(error, props));               \n        })\n    }\n}\n\nexport const closeSuccessModal = (props, url) => {\n    return {\n        type: actionTypes.CLOSE_SUCCESS_MODAL,\n        props: props,\n        url: url\n    }\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}