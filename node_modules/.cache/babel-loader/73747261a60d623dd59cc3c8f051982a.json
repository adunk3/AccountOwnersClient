{"ast":null,"code":"import _objectSpread from \"/Users/alexduncan/accountownerclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  data: null,\n  showSuccessModal: false\n};\n\nconst executeGetDataSuccess = (state, action) => {\n  return _objectSpread({}, state, {\n    data: action.data\n  });\n};\n\nconst executePostDataSuccess = (state, action) => {\n  return _objectSpread({}, state, {\n    showSuccessModal: true\n  });\n};\n\nconst executePutDataSuccess = (state, action) => {\n  return _objectSpread({}, state, {\n    showSuccessModal: true\n  });\n};\n\nconst executeDeleteDataSuccess = (state, action) => {\n  return _objectSpread({}, state, {\n    showSuccessModal: true\n  });\n};\n\nconst executeCloseSuccessModal = (state, action) => {\n  action.props.history.push(action.url);\n  return _objectSpread({}, state, {\n    showSuccessModal: false\n  });\n};\n\nconst executeCloseErrorModal = (state, action) => {\n  return _objectSpread({}, state, {\n    showErrorModal: false,\n    errorMessage: ''\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.Type) {\n    case actionTypes.GET_DATA_SUCCESS:\n      return executeGetDataSuccess(state, action);\n\n    case actionTypes.POST_DATA_SUCCESS:\n      return executePostDataSuccess(state, action);\n\n    case actionTypes.PUT_DATA_SUCCESS:\n      return executePutDataSuccess(state, action);\n\n    case actionTypes.DELETE_DATA_SUCCESS:\n      return executeDeleteDataSuccess(state, action);\n\n    case actionTypes.CLOSE_SUCCESS_MODAL:\n      return executeCloseSuccessModal(state, action);\n\n    case actionTypes.CLOSE_ERROR_MODAL:\n      return executeCloseErrorModal(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/alexduncan/accountownerclient/src/store/reducers/repositoryReducer.js"],"names":["actionTypes","initialState","data","showSuccessModal","executeGetDataSuccess","state","action","executePostDataSuccess","executePutDataSuccess","executeDeleteDataSuccess","executeCloseSuccessModal","props","history","push","url","executeCloseErrorModal","showErrorModal","errorMessage","reducer","Type","GET_DATA_SUCCESS","POST_DATA_SUCCESS","PUT_DATA_SUCCESS","DELETE_DATA_SUCCESS","CLOSE_SUCCESS_MODAL","CLOSE_ERROR_MODAL"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA4B,wBAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,IADW;AAEjBC,EAAAA,gBAAgB,EAAE;AAFD,CAArB;;AAKA,MAAMC,qBAAqB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC7C,2BACOD,KADP;AAEIH,IAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFjB;AAIH,CALD;;AAMA,MAAMK,sBAAsB,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC9C,2BACOD,KADP;AAEIF,IAAAA,gBAAgB,EAAE;AAFtB;AAIH,CALD;;AAMA,MAAMK,qBAAqB,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AAC7C,2BACOD,KADP;AAEIF,IAAAA,gBAAgB,EAAE;AAFtB;AAIH,CALD;;AAMA,MAAMM,wBAAwB,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAChD,2BACOD,KADP;AAEIF,IAAAA,gBAAgB,EAAE;AAFtB;AAIH,CALD;;AAOA,MAAMO,wBAAwB,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAChDA,EAAAA,MAAM,CAACK,KAAP,CAAaC,OAAb,CAAqBC,IAArB,CAA0BP,MAAM,CAACQ,GAAjC;AACA,2BACOT,KADP;AAEIF,IAAAA,gBAAgB,EAAE;AAFtB;AAIH,CAND;;AAQA,MAAMY,sBAAsB,GAAG,CAACV,KAAD,EAAQC,MAAR,KAAmB;AAE9C,2BACOD,KADP;AAEIW,IAAAA,cAAc,EAAE,KAFpB;AAGIC,IAAAA,YAAY,EAAE;AAHlB;AAKH,CAPD;;AAWA,MAAMC,OAAO,GAAG,CAACb,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACa,IAAf;AACI,SAAKnB,WAAW,CAACoB,gBAAjB;AACI,aAAOhB,qBAAqB,CAACC,KAAD,EAAQC,MAAR,CAA5B;;AACJ,SAAKN,WAAW,CAACqB,iBAAjB;AACI,aAAOd,sBAAsB,CAACF,KAAD,EAAQC,MAAR,CAA7B;;AACJ,SAAKN,WAAW,CAACsB,gBAAjB;AACI,aAAOd,qBAAqB,CAACH,KAAD,EAAQC,MAAR,CAA5B;;AACJ,SAAKN,WAAW,CAACuB,mBAAjB;AACI,aAAOd,wBAAwB,CAACJ,KAAD,EAAQC,MAAR,CAA/B;;AACJ,SAAKN,WAAW,CAACwB,mBAAjB;AACI,aAAOd,wBAAwB,CAACL,KAAD,EAAQC,MAAR,CAA/B;;AACJ,SAAKN,WAAW,CAACyB,iBAAjB;AACI,aAAOV,sBAAsB,CAACV,KAAD,EAAQC,MAAR,CAA7B;;AACJ;AACI,aAAOD,KAAP;AAdR;AAiBH,CAlBD;;AAoBA,eAAea,OAAf","sourcesContent":["import * as actionTypes from'../actions/actionTypes';\n\nconst initialState = {\n    data: null,\n    showSuccessModal: false\n}\n\nconst executeGetDataSuccess = (state, action) => {\n    return {\n        ...state,\n        data: action.data\n    }\n}\nconst executePostDataSuccess = (state, action) => {\n    return {\n        ...state,\n        showSuccessModal: true\n    }\n}\nconst executePutDataSuccess = (state, action) => {\n    return {\n        ...state,\n        showSuccessModal: true\n    }\n}\nconst executeDeleteDataSuccess = (state, action) => {\n    return {\n        ...state,\n        showSuccessModal: true\n    }\n}\n\nconst executeCloseSuccessModal = (state, action) => {\n    action.props.history.push(action.url);\n    return {\n        ...state,\n        showSuccessModal: false\n    }\n}\n\nconst executeCloseErrorModal = (state, action) => {\n\n    return {\n        ...state,\n        showErrorModal: false,\n        errorMessage: ''\n    }\n}\n\n\n\nconst reducer = (state = initialState, action) => {\n    switch (action.Type) {\n        case actionTypes.GET_DATA_SUCCESS:\n            return executeGetDataSuccess(state, action);\n        case actionTypes.POST_DATA_SUCCESS:\n            return executePostDataSuccess(state, action);\n        case actionTypes.PUT_DATA_SUCCESS:\n            return executePutDataSuccess(state, action);\n        case actionTypes.DELETE_DATA_SUCCESS:\n            return executeDeleteDataSuccess(state, action);\n        case actionTypes.CLOSE_SUCCESS_MODAL:\n            return executeCloseSuccessModal(state, action);\n        case actionTypes.CLOSE_ERROR_MODAL:\n            return executeCloseErrorModal(state, action);   \n        default:\n            return state;\n        \n    }\n}\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}