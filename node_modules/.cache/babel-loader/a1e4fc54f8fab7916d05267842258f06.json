{"ast":null,"code":"import _objectSpread from \"/Users/alexduncan/accountownerclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/alexduncan/accountownerclient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/alexduncan/accountownerclient/src/containers/Owner/CreateOwner/CreateOwner.js\";\nimport React, { useState, useEffect } from 'react';\nimport Input from '../../../UI/Inputs/Input';\nimport { Form, Well, Button, FormGroup, Col } from 'react-bootstrap';\nimport { returnInputConfiguration } from '../../../Utility/InputConfiguration';\nimport * as formUtilityActions from '../../../Utility/formUtilityActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\nimport * as errorHandlerActions from '../../../store/actions/errorHandlerActions';\n\nconst CreateOwner = () => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        ownerForm = _useState2[0],\n        setOwnerForm = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isFormValid = _useState4[0],\n        setIsFormValid = _useState4[1];\n\n  const showSuccessModal = useSelector(state => state.repository.showSuccessModal);\n  const showErrorModal = useSelector(state => state.errorHandler.showErrorModal);\n  const errorMessage = useSelector(state => state.errorHandler.errorMessage);\n  useEffect(() => {\n    setOwnerForm(returnInputConfiguration());\n  });\n  const formElementsArray = formUtilityActions.convertStateToArrayOfFormObjects(_objectSpread({}, ownerForm));\n\n  const createOwner = () => {};\n\n  const handleChangeEvent = (event, id) => {\n    const updatedOwnerForm = _objectSpread({}, ownerForm);\n\n    updatedOwnerForm[id] = formUtilityActions.executeValidationAndReturnFormElement(event, updatedOwnerForm, id);\n    const counter = formUtilityActions.countInvalidElements(updatedOwnerForm);\n    setOwnerForm(updatedOwnerForm);\n    setIsFormValid(counter === 0);\n  };\n\n  const redirectToOwnerList = () => {};\n\n  return React.createElement(Well, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Form, {\n    horizontal: true,\n    onSubmit: createOwner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, formElementsArray.map(element => {\n    return React.createElement(Input, {\n      key: element.id,\n      elementType: element.config.element,\n      id: element.id,\n      label: element.config.label,\n      type: element.config.type,\n      value: element.config.value,\n      changed: event => handleChangeEvent(event, element.id),\n      errorMessage: element.config.errorMessage,\n      invalid: !element.config.valid,\n      shouldValidate: element.config.validation,\n      touched: element.config.touched,\n      blur: event => handleChangeEvent(event, element.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    });\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Col, {\n    mdOffset: 6,\n    md: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"submit\",\n    bsStyle: \"info\",\n    disabled: !isFormValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Create\")), React.createElement(Col, {\n    md: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Button, {\n    bsStyle: \"danger\",\n    onClick: redirectToOwnerList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Cancel\")))));\n};\n\nexport default CreateOwner;","map":{"version":3,"sources":["/Users/alexduncan/accountownerclient/src/containers/Owner/CreateOwner/CreateOwner.js"],"names":["React","useState","useEffect","Input","Form","Well","Button","FormGroup","Col","returnInputConfiguration","formUtilityActions","useSelector","useDispatch","repositoryActions","errorHandlerActions","CreateOwner","ownerForm","setOwnerForm","isFormValid","setIsFormValid","showSuccessModal","state","repository","showErrorModal","errorHandler","errorMessage","formElementsArray","convertStateToArrayOfFormObjects","createOwner","handleChangeEvent","event","id","updatedOwnerForm","executeValidationAndReturnFormElement","counter","countInvalidElements","redirectToOwnerList","map","element","config","label","type","value","valid","validation","touched"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Input from '../../../UI/Inputs/Input';\nimport { Form, Well, Button, FormGroup, Col } from 'react-bootstrap';\nimport { returnInputConfiguration } from '../../../Utility/InputConfiguration';\nimport * as formUtilityActions from '../../../Utility/formUtilityActions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as repositoryActions from '../../../store/actions/repositoryActions';\nimport * as errorHandlerActions from '../../../store/actions/errorHandlerActions';\n\n\n\n\n\n\nconst CreateOwner = () => {\n\n    const [ownerForm, setOwnerForm] = useState({});\n    const [isFormValid, setIsFormValid] = useState(false);\n\n    const showSuccessModal = useSelector(state => state.repository.showSuccessModal);\n    const showErrorModal = useSelector(state => state.errorHandler.showErrorModal);\n    const errorMessage = useSelector(state => state.errorHandler.errorMessage)\n\n    \n\n    useEffect(() => {\n        setOwnerForm(returnInputConfiguration());\n    })\n\n    const formElementsArray = formUtilityActions.convertStateToArrayOfFormObjects({ ...ownerForm });\n\n    const createOwner = () => {\n\n    }\n\n    const handleChangeEvent = (event, id) => {\n\n        const updatedOwnerForm = { ...ownerForm };\n        updatedOwnerForm[id] = formUtilityActions.executeValidationAndReturnFormElement(event, updatedOwnerForm, id);\n        const counter = formUtilityActions.countInvalidElements(updatedOwnerForm);\n        setOwnerForm(updatedOwnerForm);\n        setIsFormValid(counter === 0);\n    }\n\n    const redirectToOwnerList = () => {\n\n    }\n\n\n    return (\n        <Well>\n            <Form horizontal onSubmit={createOwner}>\n                {\n                    formElementsArray.map(element => {\n                        return <Input key={element.id} elementType={element.config.element}\n                            id={element.id} label={element.config.label}\n                            type={element.config.type} value={element.config.value}\n                            changed={(event) => handleChangeEvent(event, element.id)}\n                            errorMessage={element.config.errorMessage}\n                            invalid={!element.config.valid} shouldValidate={element.config.validation}\n                            touched={element.config.touched}\n                            blur={(event) => handleChangeEvent(event, element.id)} />\n                    })\n                }\n                <br />\n                <FormGroup>\n                    <Col mdOffset={6} md={1}>\n                        <Button type='submit' bsStyle='info' disabled={!isFormValid}>Create</Button>\n                    </Col>\n                    <Col md={1}>\n                        <Button bsStyle='danger' onClick={redirectToOwnerList}>Cancel</Button>\n                    </Col>\n                </FormGroup>\n            </Form>\n        </Well>\n    )\n}\nexport default CreateOwner;"]},"metadata":{},"sourceType":"module"}