{"ast":null,"code":"var _jsxFileName = \"/Users/alexduncan/accountownerclient/src/UI/Inputs/Input.js\";\nimport React, { Fragment } from 'react';\nimport { FormGroup, Col, FormControl, ControlLabel } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Input.css';\n\nconst input = props => {\n  let inputField = null;\n  let errorMessage = null;\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    errorMessage = React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, props.errorMessage);\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputField = React.createElement(FormGroup, {\n        controlId: props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Col, {\n        componentClass: ControlLabel,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, props.label), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: props.type,\n        value: props.value,\n        onChange: props.changed,\n        onBlur: props.blur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, errorMessage)));\n      break;\n\n    case 'datePicker':\n      inputField = React.createElement(FormGroup, {\n        controlId: props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Col, {\n        componentClass: ControlLabel,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, props.label), React.createElement(Col, {\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(DatePicker, {\n        selected: props.value,\n        dateFormat: \"MM/DD/YYYY\",\n        readOnly: true,\n        onChange: props.changed,\n        className: \"datePickerControl\",\n        showYearDropdown: true,\n        dropdownMode: \"select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, errorMessage)));\n      break;\n\n    default:\n      inputField = null;\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, inputField);\n};\n\nexport default input;","map":{"version":3,"sources":["/Users/alexduncan/accountownerclient/src/UI/Inputs/Input.js"],"names":["React","Fragment","FormGroup","Col","FormControl","ControlLabel","DatePicker","input","props","inputField","errorMessage","invalid","shouldValidate","touched","elementType","id","label","type","value","changed","blur"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,WAAzB,EAAsCC,YAAtC,QAA0D,iBAA1D;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAO,aAAP;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACrB,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,YAAY,GAAG,IAAnB;;AACA,MAAIF,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACI,cAAvB,IAAyCJ,KAAK,CAACK,OAAnD,EAA4D;AACxDH,IAAAA,YAAY,GAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,KAAK,CAACE,YAAX,CAAhB;AACH;;AAED,UAAQF,KAAK,CAACM,WAAd;AACI,SAAK,OAAL;AACIL,MAAAA,UAAU,GACN,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAED,KAAK,CAACO,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,cAAc,EAAEV,YAArB;AAAmC,QAAA,EAAE,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKG,KAAK,CAACQ,KADX,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAER,KAAK,CAACS,IAAzB;AAA+B,QAAA,KAAK,EAAET,KAAK,CAACU,KAA5C;AAAmD,QAAA,QAAQ,EAAEV,KAAK,CAACW,OAAnE;AAA4E,QAAA,MAAM,EAAEX,KAAK,CAACY,IAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,EAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKV,YAAL,CADJ,CAPJ,CADJ;AAaA;;AACJ,SAAK,YAAL;AACID,MAAAA,UAAU,GACN,oBAAC,SAAD;AAAW,QAAA,SAAS,EAAED,KAAK,CAACO,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,cAAc,EAAEV,YAArB;AAAmC,QAAA,EAAE,EAAE,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKG,KAAK,CAACQ,KADX,CADJ,EAII,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAER,KAAK,CAACU,KAA5B;AAAmC,QAAA,UAAU,EAAC,YAA9C;AAA2D,QAAA,QAAQ,MAAnE;AACI,QAAA,QAAQ,EAAEV,KAAK,CAACW,OADpB;AAC6B,QAAA,SAAS,EAAC,mBADvC;AAEI,QAAA,gBAAgB,MAFpB;AAEqB,QAAA,YAAY,EAAC,QAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAJJ,EASI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKT,YAAL,CADJ,CATJ,CADJ;AAeA;;AACJ;AAASD,MAAAA,UAAU,GAAG,IAAb;AAjCb;;AAoCA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,UADL,CADJ;AAKH,CAhDD;;AAiDA,eAAeF,KAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport { FormGroup, Col, FormControl, ControlLabel } from 'react-bootstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './Input.css';\n\n\nconst input = (props) => {\n    let inputField = null;\n    let errorMessage = null;\n    if (props.invalid && props.shouldValidate && props.touched) {\n        errorMessage = (<em>{props.errorMessage}</em>);\n    }\n\n    switch (props.elementType) {\n        case 'input':\n            inputField = (\n                <FormGroup controlId={props.id}>\n                    <Col componentClass={ControlLabel} sm={2}>\n                        {props.label}\n                    </Col>\n                    <Col sm={6}>\n                        <FormControl type={props.type} value={props.value} onChange={props.changed} onBlur={props.blur} />\n                    </Col>\n                    <Col>\n                        <em>{errorMessage}</em>\n                    </Col>\n                </FormGroup>\n            )\n            break;\n        case 'datePicker':\n            inputField = (\n                <FormGroup controlId={props.id}>\n                    <Col componentClass={ControlLabel} sm={2}>\n                        {props.label}\n                    </Col>\n                    <Col sm={6}>\n                        <DatePicker selected={props.value} dateFormat=\"MM/DD/YYYY\" readOnly\n                            onChange={props.changed} className='datePickerControl'\n                            showYearDropdown dropdownMode=\"select\" />\n                    </Col>\n                    <Col>\n                        <em>{errorMessage}</em>\n                    </Col>\n                </FormGroup>\n            )\n            break;\n        default: inputField = null;\n    }\n\n    return (\n        <Fragment>\n            {inputField}\n        </Fragment>\n    )\n}\nexport default input;"]},"metadata":{},"sourceType":"module"}